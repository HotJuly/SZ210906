1.key值的使用
	在组件template,通过v-for遍历生成的节点,都需要添加上一个唯一标识作为key值

2.常用作key值的数据
	1.遍历得到的数据中具有的唯一标识,例如:id
	2.遍历得到的数据的下标,例如:index
	3.遍历得到的数据本身,前提是数据本身必须是基础数据类型

3.key值的作用
	与diff算法有关
	可以提高diff算法性能
	key值对于首次渲染,没有任何作用
	当遍历的响应式数据发生变化时,Vue会根据最新的数据来生成新的虚拟DOM,并与旧的虚拟DOM进行对比,最终找到可以复用的真实DOM
		key值就是对比的关键要素


	first render:
		1.根据template字符串编译成render函数(created->beforeMount)
		2.调用render函数,用于生成虚拟DOM树
		3.根据生成的虚拟DOM树,来生成对应的真实DOM树
		4.将生成的真实DOM树替换掉页面上的el元素,实现挂载


	update render:
		1.将当前最新的状态数据,传入到render函数中,用于生成新的虚拟DOM树
		2.比较新旧虚拟DOM树,找到可以复用的真实DOM
		3.比较过程中,如果遇到不能复用的真实DOM,就会丢弃,然后根据最新的虚拟DOM生成新的真实DOM
			保证所有的虚拟DOM都有自己对应的真实DOM
		4.将新组成的真实DOM树替换掉页面上对应的区域,实现页面重新

	注意:在update render中,流程2和3就是diff算法

4.使用index作为key值,可能出现的问题
	input案例
		在此案例中,diff算法有生效,成功复用了真实DOM,但是复用错了

	商品排序案例
		在此案例中,其实数据并没有任何的变化,只是排列顺序发生了变化
		最终diff算法有生效,但是没有成功复用真实DOM,所有的虚拟DOM都重新生成了一份真实DOM
			diff算法在这个案例中,不仅没有优化性能,反而还在拖累性能

	注意:如果遍历数据后续不会发生变化,是可以使用index作为key值的,但是如果会发生数据变化,尽量不要使用index作为key值

	小总结:diff算法生效是一回事,更重要的是保证diff算法能成功复用对的真实DOM

5.使用唯一标识作为key值的好处
	只要服务器的数据不发生变化,那么生成的真实DOM就可以一直复用下去










		
	