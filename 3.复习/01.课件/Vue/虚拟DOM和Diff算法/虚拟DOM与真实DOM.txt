1.大家对虚拟DOM的了解?
	他是一个js对象
	类似于文档碎片,更方便操作
	可以提高性能

2.真实DOM与虚拟DOM的了解
	真实DOM(原生DOM)
		他是一个js对象
		他就是一阶段学习的DOM对象
		他是一个标签(粗浅理解)

		浏览器会根据页面上的每个标签的情况,在内存中创建一个该标签的抽象化对象(DOM对象)
		DOM其实是浏览器提供给开发者操作页面的接口API

		DOM与页面上的标签具有映射关系,当开发者修改DOM对象的时候,页面上的标签会随之发生变化


	虚拟DOM
		他是一个js对象(构造函数:VNode)
		虚拟DOM其实就是根据页面上标签的某些特点,生成的一个抽象画的对象
		虚拟DOM会记录对应标签的重要数据

		虚拟DOM只是人为抽象得到的一个普通的js对象,修改该对象不会影响到页面上的展示效果
		js可以根据虚拟DOM生成真实DOM,最后插入到页面上


3.真实DOM与虚拟DOM的区别
	1.内存消耗
		原生DOM体量较大,但是无用属性过多,导致内存消耗过大
		虚拟DOM体量较小,只记录标签的重要数据,所以内存消耗较小

	2.渲染性能消耗
		重绘与重排
			重绘	当页面内容的字体颜色,背景颜色,边框颜色等样式发生变化,页面需要重新绘制才能看到最新结果
			重排	当页面内容的大小,结构等发生变化,页面需要重新计算,进行排版布局

			总结:重排一定伴随着重绘,重绘不一定伴随着重排


		只要修改真实DOM就会立即影响到页面上的标签
		修改虚拟DOM并不会直接对页面上的标签产生影响

		从代码结构来看,真实DOM所需要做的事情,虚拟DOM都得做,虚拟DOM还需要额外生成一个虚拟DOM对象,感觉更加浪费内存

		如果直接操作真实DOM,首先速度较慢,而且很有可能导致多次的重绘重排

		如果直接操作虚拟DOM,只是在内存中对虚拟DOM进行修改,不会立即影响到页面的展示效果
			虚拟DOM会根据最后一次的结构,来生成真实DOM,并且插入到页面上,只会发生一次重绘重排

		问题:到底是虚拟DOM额外操作的js计算更加浪费性能,还是真实DOM多次重绘重排更加浪费性能?
		解答:
			10W次的js计算花费1ms不到
			1W次的js计算+1W次的重绘重排花费219ms

			1W次渲染>>>10W次js计算

		所以才需要使用虚拟DOM,虽然会浪费更多的js计算和内存,但是可以减少重绘重排的次数,提高页面的渲染性能

4.虚拟DOM总结
	虚拟DOM只是一个普通的js对象,他是根据标签的重要数据所抽象化得到的一个VNode对象
	修改虚拟DOM不会对页面直接产生任何的影响
		如果想要对页面产生影响,需要先将虚拟DOM生成真实DOM,在插入到页面上
	虚拟DOM性能远高于真实DOM,所以减少操作真实DOM的频率,使用虚拟DOM有类似于防抖的效果
			












		
		