需求:当用户点击上一首/下一首按钮时,页面需要展示对应歌曲信息,同时自动播放对应歌曲
拆解:
	1.当用户点击上一首/下一首按钮时
		绑定事件监听
		事件源:上一首/下一首按钮
		事件名:tap||touchstart

	2.页面展示对应歌曲信息
		继续拆解:
			1.页面如何展示歌曲信息?
				只要将歌曲信息对象更新到songObj状态中,页面就会自动渲染出对应的歌曲信息

			2.对应的歌曲是哪一首歌?

	3.自动播放对应歌曲
		继续拆解:
			1.如何自动播放歌曲?
				同播放按钮逻辑相似
				1.使用wx.getBackgroundAudioManager获取到全局唯一的背景音频管理器对象
				2.给背景音频管理器对象添加src和title属性就可以自动播放

			2.对应的歌曲是哪一首歌?

	合并问题2和3中的遗留问题:
		问题:如何知道对应的歌曲是哪一首歌?
			当前song页面没有上一首/下一首歌曲的信息,因为每个人的上下首歌曲都不相同

			实际上歌曲的播放列表就是每日推荐页面的recommendList列表
				也就是说,数据存在每日推荐页面,但是用户身处于song页面
					需要实现两个页面之间的数据通信
					Vue:
						1.Vuex
						2.localStorage
						3.路由传参
						4.全局事件总线
							两种角色:
								订阅者	->	想要接受数据的一方(例如:学生)
								发布者	->	需要发送数据的一方(例如:老师)
							动作:
								订阅	->	$on(消息名称,用于接收数据的回调函数)
								发布	->	$emit(消息名称,需要发布的数据)

							感觉可以实现任意两个组件之间的数据通信
							约束:
								1.订阅动作必须在发布动作之前完成
									
								2.订阅者和发布者必须同时存在

					小程序:
						1.app实例对象
							将整个播放列表recommendList存入app实例对象上
						2.Storage
							将整个播放列表recommendList存入Storage上
						3.路由传参
							由于url具有长度限制,所以不适合将播放列表整个传递给song页面
							由于路由传参只能发生在跳转路由的瞬间,才能传递(依赖于跳转页面操作)
								然而,用户一直处于song页面,并没有频繁跳转,所以能传递的数据量有限
						4.PubSub
							两种角色:
								订阅者	->	想要接受数据的一方(例如:学生)
								发布者	->	需要发送数据的一方(例如:老师)
							动作:
								订阅	->	PubSub.subscribe(消息名称,用于接收数据的回调函数)
								发布	->	PubSub.publish(消息名称,需要发布的数据)

							感觉可以实现任意两个组件之间的数据通信
							约束:
								1.订阅动作必须在发布动作之前完成
									
								2.订阅者和发布者必须同时存在

							小程序使用npm包流程:
								1.生成package.json文件
									npm init
								2.下载PubSub文件
									npm install pubsub-js
								3.开启允许使用npm模块
									流程:微信开发者工具->详情->本地设置->允许使用npm模块
								4.构建已有的npm包(将其变为小程序专用的npm包)
									流程:微信开发者工具->工具->构建npm

			需求1:每日推荐页面需要告知song页面,上一首/下一首的歌曲id
				订阅者->song页面
				发布者->每日推荐页面

			需求2:song页面需要告知每日推荐页面,用户点击的是上一首/下一首
				订阅者->每日推荐页面
				发布者->song页面


			准备工作:
				1.流程1中会发布数据,订阅方是每日推荐页面,所以需要提前做好订阅操作
					在每日推荐页面加载的时候,就做好消息的订阅操作
					因为每日推荐页面如果都没加载完成,用户是到达不了song页面的
					消息名称:switchType

				2.流程2中需要提前存储好当前是哪一首歌这个数据
					在每日推荐页面跳转到song页面之前,就记录当前跳转的是哪一首歌就可以

				3.流程3中会发布数据,订阅方是song页面,所以需要提前做好订阅操作
					因为必须先执行流程1,才能执行到流程3,所以在用户点击按钮,发布数据之前,绑定消息订阅就可以
					消息名称:sendId

			流程:
				1.当用户点击上一首/下一首按钮时,song页面需要告知每日推荐页面,需要查找的对应歌曲是哪一首(标识)
					订阅者->每日推荐页面
					发布者->song页面
					发布的数据->用户操作标识(next代表下一首,pre代表上一首)
					消息名称->switchType

				2.当每日推荐页面接收到标识之后,找到对应的歌曲id
					问题:虽然知道了要找的是上一首/下一首,但是当前是哪一首歌?

				3.每日推荐页面将找到的对应歌曲id告知song页面
					订阅者->song页面
					发布者->每日推荐页面
					发布的数据->对应歌曲id
					消息名称->sendId

				4.song页面接收到对应歌曲id之后,发送请求获取歌曲的详细信息和音频链接
			
				5.最终将得到的详细信息更新到data中进行展示,将得到的音频链接进行播放

					




















